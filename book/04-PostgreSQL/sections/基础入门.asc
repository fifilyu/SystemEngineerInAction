=== 基础入门

==== 初始化

[source, bash]
----
mkdir -p /var/lib/postgres/data
chown -R postgres:postgres /var/lib/postgres
su - postgres -c "initdb --locale en_US.UTF-8 -D '/var/lib/postgres/data'"
----

[horizontal]
默认数据库:: postgres
默认用户名称:: postgres
默认用户密码:: 无

==== 配置文件

主配置文件::
    /var/lib/postgres/data/postgresql.conf

客户端认证配置文件::
    /var/lib/postgres/data/pg_hba.conf

`pg_hba.conf` 中有：

[source, text]
----
# TYPE  DATABASE        USER            ADDRESS                 METHOD

# "local" is for Unix domain socket connections only
local   all             all                                     trust
# IPv4 local connections:
host    all             all             127.0.0.1/32            trust
----

===== socket连接

`local` 行表示任意用户使用socket（不指定 `-h` 参数）时连接连接所有数据库，不需要密码。比如，

[source, console]
----
[postgres@ryzen7 ~]$ psql
psql (13.4)
输入 "help" 来获取帮助信息.

postgres=#
----

这种连接和监听端口 `5432` 无关。

===== 连接指定主机（端口5432）

`host` 行表示任意用户通过 `-h 127.0.0.1` 连接所有数据库，不需要密码。

[source, console]
----
[postgres@ryzen7 ~]$ psql -h 127.0.0.1
psql (13.4)
输入 "help" 来获取帮助信息.

postgres=
----


通常，我会将上面这行修改为：

[source, text]
----
host    all             all             0.0.0.0/0               password
----

表示 `-h` 指定主机时，必须使用密码登录。

==== 启动服务

.Arch Linux
[source, bash]
----
systemctl enable postgresql

systemctl start postgresql

systemctl status postgresql
----

==== 通过socket登录数据库

切换到postgres用户：

[source, bash]
----
sudo su - postgres
----

.控制台输出
[source, console]
----
[fifilyu@ryzen7 ~]$ sudo su - postgres
[sudo] fifilyu 的密码：

[postgres@ryzen7 ~]$ id
用户id=88(postgres) 组id=88(postgres) 组=88(postgres)

----

直接socket登录pg，不需要 `-h` 参数：

[source, bash]
----
sudo su - postgres -c psql
----

.控制台输出
[source, console]
----
[fifilyu@ryzen7 ~]$ sudo su - postgres -c psql
[sudo] fifilyu 的密码：

psql (13.4)
输入 "help" 来获取帮助信息.

postgres=#

----

==== psql创建用户

`psql` 登录pg后，新建用户 `foo`，同时设置密码：

[source, bash]
----
create user foo with password 'password';
----

.控制台输出
[source, console]
----
[fifilyu@ryzen7 ~]$ sudo su - postgres -c psql
[sudo] fifilyu 的密码：
psql (13.4)
输入 "help" 来获取帮助信息.

postgres=# create user foo with password 'password';
CREATE ROLE
postgres=#
----

==== psql创建数据库

`psql` 登录pg后，新建数据库 `testdb`，同时设置数据库主用户：

[source, bash]
----
create database testdb owner foo;
----

.控制台输出
[source, console]
----
[fifilyu@ryzen7 ~]$ sudo su - postgres -c psql
[sudo] fifilyu 的密码：
psql (13.4)
输入 "help" 来获取帮助信息.

postgres=# create database testdb owner foo;
CREATE DATABASE
postgres=#
----

==== 测试通过网络登录数据库

用新建的用户登录数据库 `testdb`：

`psql -h 127.0.0.1 -U foo testdb`

.控制台输出——密码验证成功
[source, console]
----
[fifilyu@ryzen7 ~]$ psql -h 127.0.0.1 -U foo testdb
用户 foo 的口令：
psql (13.4)
输入 "help" 来获取帮助信息.

testdb=>
----

.控制台输出——密码错误提示
[source, console]
----
[fifilyu@ryzen7 ~]$ psql -h 127.0.0.1 -U foo testdb
用户 foo 的口令：
psql: 错误: FATAL:  password authentication failed for user "foo"
----

IMPORTANT: `pg_hba.conf` 中必须设置 `password` 认证密码登录才会有效。


==== 导入导出

.无密码输入操作
[TIP]
====
[source, bash]
----
echo '127.0.0.1:5432:testdb:foo:tu9pheboajidee1Thohs' > ~/.pgpass
chmod 600 ~/.pgpass
----
====

.导出指定数据库数据到SQL文件
[source, bash]
----
pg_dump --inserts -h 127.0.0.1 -U foo testdb -f testdb.sql
pg_dump --inserts -h 127.0.0.1 -U foo testdb | gzip  > foo_$(date +%Y_%m_%d_%H_%M_%S).sql.gz
----


.导入SQL文件到指定数据库
[source, bash]
----
psql -h 127.0.0.1 -U foo testdb -f testdb.sql
----

==== pgsql控制台命令

[horizontal]
\h:: 查看SQL命令的解释，比如\h select。
\?:: 查看psql命令列表。
\l:: 列出所有数据库。
\c [database_name]:: 连接其他数据库。
\d:: 列出当前数据库的所有表格。
\d [table_name]:: 列出某一张表格的结构。
\du:: 列出所有用户。
\e:: 打开文本编辑器。
\conninfo:: 列出当前数据库和连接的信息。
\password:: 修改当前用户密码
\q:: 退出pgsql

