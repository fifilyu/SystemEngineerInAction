=== 日常使用

https://eff-certbot.readthedocs.io/en/stable/using.html#certbot-commands[Certbot Commands文档]

==== 查看证书域名列表

===== 方法一：OpenSSL + x509 打印证书信息

[source, bash]
----
openssl x509 -in /etc/letsencrypt/live/foo.com/fullchain.pem -text -noout | grep DNS
----

.屏幕输出
[source, console]
----
DNS:*.foo.com, DNS:foo.com
----

===== 方法二：打印指定证书（foo.com）的信息

TIP: `certbot --help certificates`

[source, bash]
----
certbot certificates --cert-name foo.com
----

.屏幕输出
[source, console]
----
Saving debug log to /var/log/letsencrypt/letsencrypt.log

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Found the following matching certs:
  Certificate Name: foo.com
    Serial Number: 3709aba3222e0229f3f9b2e49b1f5664131
    Key Type: ECDSA
    Domains: foo.com *.foo.com
    Expiry Date: 2024-01-03 06:19:50+00:00 (VALID: 89 days)
    Certificate Path: /etc/letsencrypt/live/foo.com/fullchain.pem
    Private Key Path: /etc/letsencrypt/live/foo.com/privkey.pem
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
----

===== 方法三：查找同时包括foo.com和*.foo.com域名的证书

[source, bash]
----
certbot certificates -d foo.com -d *.foo.com
----

.屏幕输出
[source, console]
----
Saving debug log to /var/log/letsencrypt/letsencrypt.log

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Found the following matching certs:
  Certificate Name: foo.com
    Serial Number: 3709aba3222e0229f3f9b2e49b1f5664131
    Key Type: ECDSA
    Domains: foo.com *.foo.com
    Expiry Date: 2024-01-03 06:19:50+00:00 (VALID: 89 days)
    Certificate Path: /etc/letsencrypt/live/foo.com/fullchain.pem
    Private Key Path: /etc/letsencrypt/live/foo.com/privkey.pem
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
----

==== 同时签发根域名（foo.com）和泛域名（*.foo.com）至一个证书

TIP: `certbot --help certonly`

IMPORTANT: 如果域名证书用于CDN，注意使用 `certbot certonly --key-type rsa` 签发RSA格式私钥才能用

. 签发多域名（foo.com、*.foo.com）证书：
+
.位置：签发界面
[source, bash]
----
certbot certonly -d foo.com -d *.foo.com --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory
----
+
[IMPORTANT]
====
`-d foo.com -d *.foo.com` 参数::
顺序不能错乱::: 默认用第一个域名作为证书名称，如 `/etc/letsencrypt/live/foo.com`
====
+
.签发界面的屏幕输出（1）
[source, console]
----
Saving debug log to /var/log/letsencrypt/letsencrypt.log
Requesting a certificate for foo.com and *.foo.com

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Please deploy a DNS TXT record under the name:

_acme-challenge.foo.com.

with the following value:

KhfLnoh0x77HK9mdxCZfpWN9RA-J-eXmPvZTpvX9ReA

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Press Enter to Continue <1>
----
+
.签发界面的屏幕输出（2）
[source, console]
----
【接 签发界面的屏幕输出（1） 的内容】
......
......
......

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Please deploy a DNS TXT record under the name:

_acme-challenge.foo.com.

with the following value:

0XfJQBCwpgzREwrxSiBOQRMmn7iNNE3X71QSjhUZbMs

(This must be set up in addition to the previous challenges; do not remove,
replace, or undo the previous challenge tasks yet. Note that you might be
asked to create multiple distinct TXT records with the same name. This is
permitted by DNS standards.)

Before continuing, verify the TXT record has been deployed. Depending on the DNS
provider, this may take some time, from a few seconds to multiple minutes. You can
check if it has finished deploying with aid of online tools, such as the Google
Admin Toolbox: https://toolbox.googleapps.com/apps/dig/#TXT/_acme-challenge.foo.com.
Look for one or more bolded line(s) below the line ';ANSWER'. It should show the
value(s) you've just added.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Press Enter to Continue <1>
----
+
IMPORTANT: 现在，已经拿到两条DNS TXT解析记录字符串，接着去做解析

[start=2]
. 登录域名管理界面，新增 [red big]#两条相同名称的 TXT 解析记录#，主机记录名称： _acme-challenge
+
如下图所示：
+
image::dns_settings_two_txt.png[]

[start=3]
. 确认域名解析已经生效
+
.位置：域名验证界面
[source, bash]
----
dig _acme-challenge.foo.com TXT
----
+
.屏幕输出
[source, console]
----
; <<>> DiG 9.11.4-P2-RedHat-9.11.4-26.P2.el7_9.14 <<>> _acme-challenge.foo.com TXT
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 57330
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 512
;; QUESTION SECTION:
;_acme-challenge.foo.com.	IN	TXT

;; ANSWER SECTION:
_acme-challenge.foo.com. 600	IN	TXT	"0XfJQBCwpgzREwrxSiBOQRMmn7iNNE3X71QSjhUZbMs" <1>
_acme-challenge.foo.com. 600	IN	TXT	"KhfLnoh0x77HK9mdxCZfpWN9RA-J-eXmPvZTpvX9ReA" <2>

;; Query time: 172 msec
;; SERVER: 8.8.8.8#53(8.8.8.8)
;; WHEN: Thu Oct 05 16:02:59 CST 2023
;; MSG SIZE  rcvd: 165
----
<1> 第一条 `_acme-challenge.foo.com` DNS TXT解析记录
<2> 第二条 `_acme-challenge.foo.com` DNS TXT解析记录

[start=4]
. 继续完成签发多域名（foo.com、*.foo.com）证书：
+
.签发界面的屏幕输出（3）
[source, console]
----
【接 签发界面的屏幕输出（2） 的内容】
......
......
......

Successfully received certificate.
Certificate is saved at: /etc/letsencrypt/live/foo.com/fullchain.pem
Key is saved at:         /etc/letsencrypt/live/foo.com/privkey.pem
This certificate expires on 2024-01-03.
These files will be updated when the certificate renews.

NEXT STEPS:
- This certificate will not be renewed automatically. Autorenewal of --manual certificates requires the use of an authentication hook script (--manual-auth-hook) but one was not provided. To renew this certificate, repeat this same certbot command before the certificate's expiry date.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
If you like Certbot, please consider supporting our work by:
 * Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
 * Donating to EFF:                    https://eff.org/donate-le
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
----

.关于CDN+域名证书的说明
[IMPORTANT]
====
* https://letsencrypt.org/zh-cn/certificates/[Let’s Encrypt证书信任链]
** https://letsencrypt.org/certs/isrgrootx1.pem[根证书->活跃证书->ISRG Root X1->自签名->PEM]
** https://letsencrypt.org/certs/lets-encrypt-r3.pem[中间证书->活跃证书->Let’s Encrypt R3->通过 ISRG Root X1 签出->PEM]

如果域名证书用于CDN，除了需要RSA格式的私钥外，还需要证书信任链。

本来 `fullchain.pem` 已经包含了证书信任链，分别是域名证书（cert.pem）、中间证书（chain.pem中第一个证书）和根证书（chain.pem中第二个证书）。

结果，CDN厂商验证信任链是从互联网渠道获得的中间证书和根证书，和 `chain.pem` 文件中的证书内容不匹配。

手动生成CDN厂商支持的 `fullchain.pem` 证书文件：

[source, bash]
----
test -f /etc/letsencrypt/isrgrootx1.pem || wget https://letsencrypt.org/certs/isrgrootx1.pem -O /etc/letsencrypt/isrgrootx1.pem
test -f /etc/letsencrypt/lets-encrypt-r3.pem || wget https://letsencrypt.org/certs/isrgrootx1.pem -O /etc/letsencrypt/lets-encrypt-r3.pem

cat /etc/letsencrypt/live/foo.com/cert.pem /etc/letsencrypt/lets-encrypt-r3.pem /etc/letsencrypt/isrgrootx1.pem > /etc/letsencrypt/live/foo.com/fullchain_for_cdn.pem
----

将 `/etc/letsencrypt/live/foo.com/fullchain_for_cdn.pem` 上传到CDN厂商即可。
====

[start=5]
. 生成交换密钥
+
.位置：签发界面
[source, bash]
----
openssl dhparam -dsaparam -out /etc/letsencrypt/live/foo.com/dhparam.pem 2048
----

==== 前后签发根域名（foo.com）和泛域名（*.foo.com）至一个证书

TIP: `certbot --help certonly`

. 已有包含根域名的证书：/etc/letsencrypt/live/foo.com
. 在根域名证书中追加新域名（*.foo.com）：
+
[source, bash]
----
certbot certonly -d foo.com -d *.foo.com --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory
----
+
[IMPORTANT]
====
`-d foo.com -d *.foo.com` 参数::
顺序不能错乱::: 默认用第一个域名作为证书名称，如 `/etc/letsencrypt/live/foo.com`
列表不能缺失::: 新证书仅签发 `-d` 指定的域名列表，所以不能有缺失
====
+
.签发证书的屏幕输出（1）
[source, console]
----
Saving debug log to /var/log/letsencrypt/letsencrypt.log

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
You have an existing certificate that contains a portion of the domains you
requested (ref: /etc/letsencrypt/renewal/foo.com.conf)

It contains these names: foo.com <1>

You requested these names for the new certificate: foo.com, *.foo.com. <2>

Do you want to expand and replace this existing certificate with the new
certificate?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(E)xpand/(C)ancel: E  <3>
----
<1> 根证书包含的域名列表
<2> 本次签发指定的域名列表
<3> 询问用新生成的域名证书替换老证书，确认请输入 [red big]#E#

[start=3]
. 接下来的步骤就非常熟悉了，不再多说：
+
.签发证书的屏幕输出（2）
[source, console]
----
【接 签发证书的屏幕输出（1） 的内容】
......
......
......

(E)xpand/(C)ancel: E
Renewing an existing certificate for foo.com and *.foo.com

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Please deploy a DNS TXT record under the name:

_acme-challenge.foo.com.

with the following value:

_V7Odzo7QopP9Pi2q_GMbvXyVkcUVhHIn4YVS-4M_Og

Before continuing, verify the TXT record has been deployed. Depending on the DNS
provider, this may take some time, from a few seconds to multiple minutes. You can
check if it has finished deploying with aid of online tools, such as the Google
Admin Toolbox: https://toolbox.googleapps.com/apps/dig/#TXT/_acme-challenge.foo.com.
Look for one or more bolded line(s) below the line ';ANSWER'. It should show the
value(s) you've just added.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Press Enter to Continue

Successfully received certificate.
Certificate is saved at: /etc/letsencrypt/live/foo.com/fullchain.pem
Key is saved at:         /etc/letsencrypt/live/foo.com/privkey.pem
This certificate expires on 2024-01-03.
These files will be updated when the certificate renews.

NEXT STEPS:
- This certificate will not be renewed automatically. Autorenewal of --manual certificates requires the use of an authentication hook script (--manual-auth-hook) but one was not provided. To renew this certificate, repeat this same certbot command before the certificate's expiry date.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
If you like Certbot, please consider supporting our work by:
 * Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
 * Donating to EFF:                    https://eff.org/donate-le
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
----

[start=3]
. 生成交换密钥
+
.位置：签发界面
[source, bash]
----
openssl dhparam -dsaparam -out /etc/letsencrypt/live/foo.com/dhparam.pem 2048
----

